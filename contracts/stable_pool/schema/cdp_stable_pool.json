{
  "contract_name": "cdp_stable_pool",
  "contract_version": "0.0.1",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "control_contract",
      "min_redeem_value",
      "owner_addr",
      "sub_demon"
    ],
    "properties": {
      "control_contract": {
        "type": "string"
      },
      "min_redeem_value": {
        "$ref": "#/definitions/Uint256"
      },
      "owner_addr": {
        "type": "string"
      },
      "sub_demon": {
        "type": "string"
      }
    },
    "additionalProperties": false,
    "definitions": {
      "Uint256": {
        "type": "string"
      }
    }
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "update_config"
        ],
        "properties": {
          "update_config": {
            "type": "object",
            "properties": {
              "control_contract": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "min_redeem_value": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Uint256"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "owner_addr": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "mint_stable_coin"
        ],
        "properties": {
          "mint_stable_coin": {
            "type": "object",
            "required": [
              "minter",
              "stable_amount"
            ],
            "properties": {
              "minter": {
                "type": "string"
              },
              "stable_amount": {
                "$ref": "#/definitions/Uint128"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "repay_stable_coin"
        ],
        "properties": {
          "repay_stable_coin": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "redeem_stable_coin"
        ],
        "properties": {
          "redeem_stable_coin": {
            "type": "object",
            "required": [
              "minter"
            ],
            "properties": {
              "minter": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "repay_stable_from_liquidation"
        ],
        "properties": {
          "repay_stable_from_liquidation": {
            "type": "object",
            "required": [
              "minter",
              "pre_balance"
            ],
            "properties": {
              "minter": {
                "type": "string"
              },
              "pre_balance": {
                "$ref": "#/definitions/Uint256"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      },
      "Uint256": {
        "type": "string"
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "state"
        ],
        "properties": {
          "state": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ConfigResponse",
      "type": "object",
      "required": [
        "control_contract",
        "owner_addr",
        "stable_denom"
      ],
      "properties": {
        "control_contract": {
          "type": "string"
        },
        "owner_addr": {
          "type": "string"
        },
        "stable_denom": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "state": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "StateResponse",
      "type": "object",
      "required": [
        "total_supply"
      ],
      "properties": {
        "total_supply": {
          "$ref": "#/definitions/Uint256"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint256": {
          "type": "string"
        }
      }
    }
  }
}
