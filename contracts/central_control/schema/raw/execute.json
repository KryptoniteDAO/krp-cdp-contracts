{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "custody_contract": {
              "type": [
                "string",
                "null"
              ]
            },
            "epoch_period": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "liquidation_contract": {
              "type": [
                "string",
                "null"
              ]
            },
            "oracle_contract": {
              "type": [
                "string",
                "null"
              ]
            },
            "pool_contract": {
              "type": [
                "string",
                "null"
              ]
            },
            "redeem_fee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal256"
                },
                {
                  "type": "null"
                }
              ]
            },
            "stable_denom": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_owner"
      ],
      "properties": {
        "set_owner": {
          "type": "object",
          "required": [
            "new_owner_addr"
          ],
          "properties": {
            "new_owner_addr": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "accept_ownership"
      ],
      "properties": {
        "accept_ownership": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "mint stable coin kUSD call by custody contract.",
      "type": "object",
      "required": [
        "mint_stable_coin"
      ],
      "properties": {
        "mint_stable_coin": {
          "type": "object",
          "required": [
            "minter",
            "stable_amount"
          ],
          "properties": {
            "collateral_amount": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            },
            "collateral_contract": {
              "type": [
                "string",
                "null"
              ]
            },
            "is_redemption_provider": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "minter": {
              "type": "string"
            },
            "stable_amount": {
              "$ref": "#/definitions/Uint128"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "become_redemption_provider"
      ],
      "properties": {
        "become_redemption_provider": {
          "type": "object",
          "required": [
            "is_redemption_provider"
          ],
          "properties": {
            "is_redemption_provider": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "repay_stable_coin"
      ],
      "properties": {
        "repay_stable_coin": {
          "type": "object",
          "required": [
            "amount",
            "sender"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "sender": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "redeem_stable_coin"
      ],
      "properties": {
        "redeem_stable_coin": {
          "type": "object",
          "required": [
            "amount",
            "minter",
            "redeemer"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "minter": {
              "type": "string"
            },
            "redeemer": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw_collateral"
      ],
      "properties": {
        "withdraw_collateral": {
          "type": "object",
          "required": [
            "collateral_amount",
            "collateral_contract"
          ],
          "properties": {
            "collateral_amount": {
              "$ref": "#/definitions/Uint128"
            },
            "collateral_contract": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "deposit_collateral"
      ],
      "properties": {
        "deposit_collateral": {
          "type": "object",
          "required": [
            "collateral_amount",
            "collateral_contract",
            "minter"
          ],
          "properties": {
            "collateral_amount": {
              "$ref": "#/definitions/Uint128"
            },
            "collateral_contract": {
              "type": "string"
            },
            "minter": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "liquidate_collateral"
      ],
      "properties": {
        "liquidate_collateral": {
          "type": "object",
          "required": [
            "minter"
          ],
          "properties": {
            "minter": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "whitelist_collateral"
      ],
      "properties": {
        "whitelist_collateral": {
          "type": "object",
          "required": [
            "collateral_contract",
            "custody_contract",
            "max_ltv",
            "name",
            "reward_book_contract",
            "symbol"
          ],
          "properties": {
            "collateral_contract": {
              "type": "string"
            },
            "custody_contract": {
              "type": "string"
            },
            "max_ltv": {
              "$ref": "#/definitions/Decimal256"
            },
            "name": {
              "type": "string"
            },
            "reward_book_contract": {
              "type": "string"
            },
            "symbol": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Decimal256": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 115792089237316195423570985008687907853269984665640564039457.584007913129639935 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
